				
* HFT and OMM paper;				
* Table 4;				
* Before estimating this code, "HFT and OMM_Main Code_Tables 2 and 3" code should be runned.				
* As a result of running "HFT and OMM_Tables 2 and 3" code, hftomm.Alltrade11intraday2relvol1 file will be generated;				
			
* apply arbitrage restrictions. Muravyev et al. (2013) are followed for the restrictions;				
				
data hftomm.Atmhigharbitrage1a;				
set hftomm.dcast_atm_nasdaq;				
if buy_port_sell_stock > 0.02 and pdev > 0.05 then arb_opp  = 1;				
else arb_opp = 0;				
if sell_port_buy_stock > 0.02 and pdev2 > 0.05 then arb_opp2  = 1;				
else arb_opp2 = 0;				
arbitrage = arb_opp + arb_opp2;				
run;				
				
				
* calculate daily number of arbitrages;				
				
				
proc means data=hftomm.Atmhigharbitrage1a noprint;				
class ticker date;				
var arbitrage;				
output out=hftomm.Atmhigharbitrage1b (drop = _type_ _freq_) sum=arbitragematch;				
run;				
				
* drop missing values;				
				
data hftomm.Atmhigharbitrage4;				
set hftomm.Atmhigharbitrage1b;				
if ticker = ' ' then delete;				
if date = '.' then delete;				
run;				
				
				
				
* we done with the ATM arbitrage;				
* we now start the same process with the non-ATM arbitrage;				

			
				
data hftomm.nonatmhigharbitrage1a;				
set hftomm.dcast_nonatm_nasdaq;				
if buy_port_sell_stock > 0.02 and pdev > 0.05 then arb_opp  = 1;				
else arb_opp = 0;				
if sell_port_buy_stock > 0.02 and pdev2 > 0.05 then arb_opp2  = 1;				
else arb_opp2 = 0;				
arbitrage = arb_opp + arb_opp2;				
run;				
				
				
proc means data=hftomm.nonatmhigharbitrage1a noprint;				
class ticker date;				
var arbitrage ;				
output out=hftomm.nonatmhigharbitrage1b (drop = _type_ _freq_) sum=arbitragematchnonatm;				
run;				
				
				
data hftomm.nonatmhigharbitragetotal4;				
set hftomm.nonatmhigharbitrage1b;				
if ticker = ' ' then delete;				
if date = '.' then delete;				
run;				
				
* now, we need to match atm arbitrage with non-atm arbitrage;				
				
proc sort data = hftomm.nonatmhigharbitragetotal4;				
by ticker date;				
run;				
				
				
proc sort data = hftomm.Atmhigharbitrage4;				
by ticker date;				
run;				
				
data hftomm.totalarbitrage4;				
merge hftomm.Atmhigharbitrage4 hftomm.nonatmhigharbitragetotal4;				
by ticker date;				
run;				
				
				
data hftomm.totalarbitrage4a;				
set hftomm.totalarbitrage4;				
if arbitragematch = '.' then arbitragematch = 0;				
if arbitragematchnonatm = '.' then arbitragematchnonatm = 0;				
run;				
				
data hftomm.totalarbitrage4b;				
set hftomm.totalarbitrage4a;				
arbitragematchall = arbitragematch + arbitragematchnonatm;				
run;				
				
				
* we now start the merge the arbitrage data with the main data generated for Table 3;				
				
proc sort data = hftomm.totalarbitrage4b;				
by ticker date;				
run;				
				
proc sort data = hftomm.Alltrade11intraday2relvol1;				
by ticker date;				
run;				
				
data hftomm.totalarbitrage4c;				
set hftomm.totalarbitrage4b;				
n=input(put(date, yymmddn8.), 8.);				
*put n=;				
drop date;				
run;				
				
data hftomm.totalarbitrage4c;				
set hftomm.totalarbitrage4c;				
rename n = date;				
run;				
				
				
proc sort data = hftomm.totalarbitrage4c;				
by ticker date;				
run;				
				
* hftomm.Alltrade11intraday2relvol1 has alread been generated by running the main code;				
				
data hftomm.totalhigharbitrage5;				
merge hftomm.totalarbitrage4c hftomm.Alltrade11intraday2relvol1;				
by ticker date;				
run;				
				
data hftomm.totalhigharbitragea;				
set hftomm.totalhigharbitrage5;				
if arbitragematchall = '.' then delete;				
if totalhftmain = '.' then delete;				
run;				
				
* we have already introduced rank micro in the main "HFT and OMM_Main Code_Tables 2 and 3" code;				
* it splits high vs low groups based on the median value;				
				
%rank (hftomm.totalhigharbitragea, hftomm.totalhigharbitragea, date, 2, arbitragematchall, IND);				
				
data hftomm.totalhigharbitragea;				
set hftomm.totalhigharbitragea;				
if IND = 2 then high = 1;				
if high = '.' then high = 0;				
interaction1 = totalhftdemand*high;				
interaction5 = totalhftmain*high;				
run;				
							
				
* this information is to be added to Table 2;				
				
proc means data = hftomm.totalhigharbitragea mean median stddev; var arbitragematchall;				
run;				
				
				
* standardize all the variables. I standartize all variables here because this sample is smaller;				
PROC STDIZE DATA = hftomm.totalhigharbitragea method=ustd OUT = hftomm.totalhigharbitrageastd;				
VAR interaction1 interaction5 quoted stockrelative optionspread optionrelative 				
lnoptionvolume impl_volatility absdelta vega gamma inversemidprice  totalhftmain spread2 totalhftdemand totalhftnondemand totalhftsupply totalnonhftsupply				
realizedvol;				
RUN;				
				
				
*Demean variables for two way fixed effects;				
				
%demean (hftomm.totalhigharbitrageastd, high); 				
%demean (hftomm.totalhigharbitrageastd, interaction1); 				
%demean (hftomm.totalhigharbitrageastd, interaction5); 				
%demean (hftomm.totalhigharbitrageastd, quoted); 				
%demean (hftomm.totalhigharbitrageastd, stockrelative); 				
%demean (hftomm.totalhigharbitrageastd, optionspread); 				
%demean (hftomm.totalhigharbitrageastd, optionrelative); 				
%demean (hftomm.totalhigharbitrageastd, lnoptionvolume); 				
%demean (hftomm.totalhigharbitrageastd, impl_volatility); 				
%demean (hftomm.totalhigharbitrageastd, absdelta); 				
%demean (hftomm.totalhigharbitrageastd, vega); 				
%demean (hftomm.totalhigharbitrageastd, gamma); 				
%demean (hftomm.totalhigharbitrageastd, inversemidprice); 				
%demean (hftomm.totalhigharbitrageastd, totalhftmain);				
%demean (hftomm.totalhigharbitrageastd, spread2);				
%demean (hftomm.totalhigharbitrageastd, totalhftdemand);				
%demean (hftomm.totalhigharbitrageastd, totalhftnondemand);				
%demean (hftomm.totalhigharbitrageastd, totalhftsupply);				
%demean (hftomm.totalhigharbitrageastd, totalnonhftsupply);				
%demean (hftomm.totalhigharbitrageastd, realizedvol);				
				
				
				
				
* Table 4;				
				
* column (i);				
				
%FirmTimeCluster(hftomm.totalhigharbitrageastd, dm2_spread2, dm2_totalhftmain dm2_high				
dm2_interaction5 dm2_stockrelative  dm2_realizedvol dm2_lnoptionvolume				
dm2_impl_volatility dm2_inversemidprice dm2_absdelta dm2_vega dm2_gamma, noint, baseline_model)				
				
* Two way fixed effect results with double-clustered standard errors are generated in temp file;				
				
proc print data = temp;				
run;				
				
* column (ii);				
				
%FirmTimeCluster(hftomm.totalhigharbitrageastd, dm2_spread2, dm2_totalhftdemand dm2_high 				
dm2_interaction1 dm2_totalhftnondemand dm2_stockrelative  dm2_realizedvol dm2_lnoptionvolume				
dm2_impl_volatility dm2_inversemidprice dm2_absdelta dm2_vega dm2_gamma, noint, baseline_model)				
				
proc print data = temp;				
run;				
				
				
				
				
				
				
